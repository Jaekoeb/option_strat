# Libraries ---------------------------------------------------------------
library(data.table)
# Parameters --------------------------------------------------------------
# Set your parameters and file names
chunk_size <- 10000
file_name  <- "data/option.csv"
output_file <- "data/cleaned_data.csv"
# Read the header to get the column names.
# fread() with nrows = 0 returns a data.table with the proper column names.
header <- c("V1", "secid", "date", "symbol", "exdate", "cp_flag", "strike_price", "best_bid", "best_offer", "volume", "open_interest", "impl_volatility", "delta", "gamma", "vega", "theta", "optionid", "ss_flag", "ticker", "sic", "index_flag", "industry_group", "issuer", "exercise_style")
# header <- names(fread(file_name, nrows = 0))
# Read the number of rows
num_rows <- 397259589
# num_rows <- fread(file_name, select = NULL)[, .N] + 1
# Initialize the starting line.
# We set skip = 1 so that we skip the header line when reading chunks.
skip <- 1
# Optionally, remove any pre-existing output file.
if (file.exists(output_file)) file.remove(output_file)
## Cleaning Parameters -----------------------------------------------------
# Days left until expiration
# should be between this interval
maturity <- c(30, 60)
# Read a chunk from the file.
# We use header = FALSE because we already grabbed the header.
chunk <- fread(file_name, skip = skip, nrows = chunk_size, header = FALSE)
install.packages("bread")
?help(package = "bread")
help(package = "bread")
bread::bnrow("data/option.csv")
397259589 / 10^5
397259589 / 10^6
# Split the CSV into files each having 100,000 rows
bread::bfile_split(file = "data/option.csv", by_nrows = 1000000, write_dir = "data/split/")
